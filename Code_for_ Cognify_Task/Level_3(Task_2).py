"""Cognify task

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XTbgRl_mL7NE7HV_95vV0Va3bfiJpDdS
"""
#cognify level 3(task 2)
#Task: Customer Preference Analysis

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
# Load the dataset
df = pd.read_csv('Dataset .csv')


#Analyze the relationship between the type of cuisine and the restaurant's rating.
# Convert columns
df['Aggregate rating'] = pd.to_numeric(df['Aggregate rating'], errors='coerce')
df['Cuisines'] = df['Cuisines'].astype(str)

# ğŸ”¹ Optional: Limit to top 10 most frequent cuisines (to keep plot clean)
top_cuisines = df['Cuisines'].value_counts().head(10).index
df_filtered = df[df['Cuisines'].isin(top_cuisines)]

# ğŸ”¹ Plot: Boxplot to show distribution of ratings across cuisines
plt.figure(figsize=(12,6))
sns.boxplot(x='Aggregate rating', y='Cuisines', data=df_filtered, palette='Set2')
plt.title("Distribution of Restaurant Ratings by Cuisine")
plt.xlabel("Aggregate Rating")
plt.ylabel("Cuisine")
plt.tight_layout()
plt.show()

# Identify the most popular cuisines among customers based on the number of votes

# Step 1: Clean columns
df['Votes'] = pd.to_numeric(df['Votes'], errors='coerce')
df['Cuisines'] = df['Cuisines'].astype(str)

# Step 2: Group by Cuisines and sum votes
votes_by_cuisine = df.groupby('Cuisines')['Votes'].sum().sort_values(ascending=False)

# Step 3: Display top 10 most voted cuisines
print("ğŸ”¹ Top 10 Most Popular Cuisines (by Votes):\n")
print(votes_by_cuisine.head(10))

# Step 4: Plot top 10
plt.figure(figsize=(10,5))
sns.barplot(x=votes_by_cuisine.head(10).values,
            y=votes_by_cuisine.head(10).index,
            palette='magma')
plt.title("Top 10 Most Popular Cuisines (Based on Votes)")
plt.xlabel("Total Votes")
plt.ylabel("Cuisine")
plt.tight_layout()
plt.show()

# Determine if there are any specific cuisines that tend to receive higher ratings

# Step 1: Clean required columns
df['Aggregate rating'] = pd.to_numeric(df['Aggregate rating'], errors='coerce')
df['Cuisines'] = df['Cuisines'].astype(str)

# Step 2: Group by cuisine and calculate average rating & restaurant count
cuisine_rating = df.groupby('Cuisines').agg(
    Average_Rating=('Aggregate rating', 'mean'),
    Count=('Aggregate rating', 'count')
).sort_values(by='Average_Rating', ascending=False)

# Step 3: Filter cuisines with at least 20 restaurants (for fair comparison)
cuisine_rating_filtered = cuisine_rating[cuisine_rating['Count'] >= 20]

# Step 4: Show top 10 high-rated cuisines
print("ğŸ”¹ Cuisines with Highest Average Ratings (with 20+ restaurants):\n")
print(cuisine_rating_filtered.head(10))

# Step 5: Plot
plt.figure(figsize=(10,6))
sns.barplot(x=cuisine_rating_filtered.head(10)['Average_Rating'],
            y=cuisine_rating_filtered.head(10).index,
            palette='Greens_r')
plt.title("Top 10 High-Rated Cuisines (Based on Average Rating)")
plt.xlabel("Average Rating")
plt.ylabel("Cuisine")
plt.tight_layout()
plt.show()
