"""Cognify task

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XTbgRl_mL7NE7HV_95vV0Va3bfiJpDdS
"""
#cognify level 3(task 3)
# Task: Data Visualization

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
# Load the dataset
df = pd.read_csv('Dataset .csv')


#Create visualizations to represent the distribution of ratings using different charts (histogram, barplot, etc.)
# Step 1: Convert Aggregate rating to numeric
df['Aggregate rating'] = pd.to_numeric(df['Aggregate rating'], errors='coerce')

# Step 2: Drop missing ratings
df = df.dropna(subset=['Aggregate rating'])

# Step 3: Histogram for to show spread of ratings
plt.figure(figsize=(8, 4))
sns.histplot(df['Aggregate rating'], bins=10, kde=True, color='skyblue')
plt.title('Histogram of Aggregate Ratings')
plt.xlabel('Rating')
plt.ylabel('Frequency')
plt.tight_layout()
plt.show()

# Step 4: Bar Plot for to show count of each unique rating
plt.figure(figsize=(8, 4))
sns.countplot(x='Aggregate rating', data=df, palette='viridis')
plt.title('Bar Plot of Rating Counts')
plt.xlabel('Aggregate Rating')
plt.ylabel('Number of Restaurants')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

# Step 5: Optional Boxplot for see distribution and outliers
plt.figure(figsize=(6, 4))
sns.boxplot(x=df['Aggregate rating'], color='lightgreen')
plt.title('Boxplot of Ratings')
plt.xlabel('Aggregate Rating')
plt.tight_layout()
plt.show()


#Compare the average ratings of different cuisines or cities using appropriate visualizations
# Step 1: Clean required columns
df['Aggregate rating'] = pd.to_numeric(df['Aggregate rating'], errors='coerce')
df['Cuisines'] = df['Cuisines'].astype(str)
df['City'] = df['City'].astype(str)

# Step 2: Average rating by Cuisine (Top 10 with most restaurants)
top_cuisines = df['Cuisines'].value_counts().head(10).index
cuisine_avg = df[df['Cuisines'].isin(top_cuisines)].groupby('Cuisines')['Aggregate rating'].mean().sort_values(ascending=False)

# Plot: Average rating by Cuisine
plt.figure(figsize=(10, 5))
sns.barplot(x=cuisine_avg.values, y=cuisine_avg.index, palette='Spectral')
plt.title("Average Rating by Cuisine (Top 10)")
plt.xlabel("Average Rating")
plt.ylabel("Cuisine")
plt.tight_layout()
plt.show()

# Step 3: Average rating by City (Top 10)
top_cities = df['City'].value_counts().head(10).index
city_avg = df[df['City'].isin(top_cities)].groupby('City')['Aggregate rating'].mean().sort_values(ascending=False)

# Plot: Average rating by City
plt.figure(figsize=(10, 5))
sns.barplot(x=city_avg.values, y=city_avg.index, palette='coolwarm')
plt.title("Average Rating by City (Top 10 Cities)")
plt.xlabel("Average Rating")
plt.ylabel("City")
plt.tight_layout()
plt.show()

# Visualize the relationship between various features and the target variable to gain insights.
# Step 1: Clean and convert
df['Aggregate rating'] = pd.to_numeric(df['Aggregate rating'], errors='coerce')
df['Votes'] = pd.to_numeric(df['Votes'], errors='coerce')
df['Price range'] = pd.to_numeric(df['Price range'], errors='coerce')
df['Has Table Booking'] = df['Has Table booking'].apply(lambda x: 1 if x == 'Yes' else 0)
df['Has Online Delivery'] = df['Is delivering now'].apply(lambda x: 1 if x == 'Yes' else 0)

# Drop missing values
df = df.dropna(subset=['Aggregate rating', 'Votes', 'Price range'])

#1. Scatter plot: Votes vs Aggregate rating
plt.figure(figsize=(8, 4))
sns.scatterplot(x='Votes', y='Aggregate rating', data=df, color='purple')
plt.title("Votes vs Aggregate Rating")
plt.xlabel("Votes")
plt.ylabel("Aggregate Rating")
plt.tight_layout()
plt.show()

#2. Box plot: Price range vs Aggregate rating
plt.figure(figsize=(6, 4))
sns.boxplot(x='Price range', y='Aggregate rating', data=df, palette='Set2')
plt.title("Price Range vs Aggregate Rating")
plt.tight_layout()
plt.show()

#3. Box plot: Table Booking vs Aggregate rating
plt.figure(figsize=(6, 4))
sns.boxplot(x='Has Table Booking', y='Aggregate rating', data=df, palette='coolwarm')
plt.title("Table Booking (Yes/No) vs Aggregate Rating")
plt.xticks([0, 1], ['No', 'Yes'])
plt.tight_layout()
plt.show()

#4. Box plot: Online Delivery vs Aggregate rating
plt.figure(figsize=(6, 4))
sns.boxplot(x='Has Online Delivery', y='Aggregate rating', data=df, palette='crest')
plt.title("Online Delivery (Yes/No) vs Aggregate Rating")
plt.xticks([0, 1], ['No', 'Yes'])
plt.tight_layout()
plt.show()

